/* 
 * Copyright 2018 Cafe Sati Polska.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package Frames.Panels;

import GreenCoffeeClasses.CoffeeGreen;
import ProductClasses.Aroma;
import ProductClasses.DirectPackage;
import ProductClasses.ReadyCoffee;
import ProductClasses.Sugar;
import ProductionClasses.ProductionCoffeeExternalReturn;
import ProductionManagement.LabTest;
import ProductionManagement.DataBaseConnector;
import ProductionManagement.Employee;
import ProductionManagement.Global;
import SatiExtends.Test;
import SatiInterfaces.Details;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Przemysław
 */
public class BrowseResourcesToExamine extends javax.swing.JPanel {

    Employee emp;
    /** n
     * Creates new form GreenCoffeeToCheckListPanel
     */
    DataBaseConnector dbc = null;
    JList coffeeGreenList = null;

    private void reload() {
        dbc.clearSession();
        dbc.openSession();
        DefaultListModel dlm = new DefaultListModel();
        ArrayList<CoffeeGreen> alcg = dbc.getCoffeeGreenToExamine();
        for (CoffeeGreen cg : alcg) {
            dlm.addElement(cg);

        }
        ArrayList<Aroma> ala = dbc.getAromaToExamine();
        for (Aroma a : ala) {
            dlm.addElement(a);
        }

        ArrayList<ProductionCoffeeExternalReturn> alpcer = dbc.getProductionCoffeeExternalReturnToExamine();
        for (ProductionCoffeeExternalReturn pcer : alpcer) {
            dlm.addElement(pcer);
        }

        ArrayList<Sugar> als = dbc.getSugarToExamine();
        for (Sugar s : als) {
            dlm.addElement(s);
        }
        ArrayList<DirectPackage> aldp = dbc.getDirectPackageToExamine();
        for (DirectPackage dp : aldp) {
            dlm.addElement(dp);
        }
        ArrayList<ReadyCoffee> alrc = dbc.getReadyCoffeeToExamine();
        for (ReadyCoffee rc : alrc) {
            dlm.addElement(rc);
        }
        coffeeGreenList.setModel(dlm);
        listScrollPane.setViewportView(coffeeGreenList);
        spinnerDate.setValue(new Date(System.currentTimeMillis()));
    }

    public BrowseResourcesToExamine(Employee emp) {
        initComponents();
        if (dbc == null) {

            dbc = Global.getDataBaseConnector();
        }
        this.emp = emp;
        dbc.openSession();

        DefaultListModel dlm = new DefaultListModel();
        coffeeGreenList = new JList(dlm);
        coffeeGreenList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        coffeeGreenList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent arg0) {
                dbc.openSession();
                Test selected = (Test) coffeeGreenList.getSelectedValue();
                if (selected.getLabTest().isVermin()) {
                    labelVermin.setText("Wykryto szkodniki !!");
                    labelVermin.setForeground(Color.red);
                } else {
                    labelVermin.setText("Nie wykryto szkodników");
                    labelVermin.setForeground(new Color(0, 0, 0));
                }
            }
        });
        listScrollPane.setViewportView(coffeeGreenList);
        reload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPaneOrganoleptic = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        textPaneTechnical = new javax.swing.JTextPane();
        buttonAccept = new javax.swing.JButton();
        buttonDecline = new javax.swing.JButton();
        listScrollPane = new javax.swing.JScrollPane();
        spinnerSampleSize = new javax.swing.JSpinner();
        labelVermin = new javax.swing.JLabel();
        buttonDetails = new javax.swing.JButton();
        spinnerDate = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText("Badanie pod względem organoleptycznym");

        jLabel2.setText("Badanie pod względem technicznym");

        jLabel3.setText("Masa próbki [g]");

        jScrollPane2.setViewportView(textPaneOrganoleptic);

        jScrollPane3.setViewportView(textPaneTechnical);

        buttonAccept.setText("Zatwierdź surowiec");
        buttonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAcceptActionPerformed(evt);
            }
        });

        buttonDecline.setText("Odrzuć surowiec");
        buttonDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeclineActionPerformed(evt);
            }
        });

        spinnerSampleSize.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        labelVermin.setText("Wybierz surowiec z listy");

        buttonDetails.setText("Pokaż szczegóły");
        buttonDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDetailsActionPerformed(evt);
            }
        });

        spinnerDate.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kawa Zielona", "Kawa Rozpuszczalna", "Zabielacz", "Opakowanie", "Aromat", "Kawa Mielona Pads", "Kawa gotowa Ze Zwrotow", "Kawa Mielona I Ziarnista Inne", "Kawa W Kapsułkach", "Kartony" }));

        jLabel4.setText("Typ surowca");

        jButton1.setText("Uzupełnij parametry");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Odśwież");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelVermin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(163, 163, 163))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(spinnerSampleSize, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonDetails)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spinnerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonAccept)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonDecline))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1))
                                    .addComponent(jLabel4))
                                .addContainerGap(7, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinnerSampleSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelVermin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonDetails)
                            .addComponent(spinnerDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonAccept)
                            .addComponent(buttonDecline))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAcceptActionPerformed
        if (!(textPaneOrganoleptic.getText().equals(""))
                && !(textPaneTechnical.getText().equals(""))
                && !(spinnerSampleSize.getValue().equals(0))
                && ((Test) coffeeGreenList.getSelectedValue()).getLabTest().getType() != 999) {
            Test selected = (Test) coffeeGreenList.getSelectedValue();
            LabTest test;
            dbc.openSession();

            selected.setState(Global.TO_STORE);
            dbc.updateObject(selected);
            test = selected.getLabTest();

            test.setOrganoleptic(textPaneOrganoleptic.getText());
            test.setTechnical(textPaneTechnical.getText());
            test.setSampleSize((Integer) spinnerSampleSize.getValue());
            test.setExamineDate(new Timestamp(((Date) spinnerDate.getValue()).getTime()));
            test.setLabAssistant(emp);
            test.setAccepted(Boolean.TRUE);
            dbc.updateObject(test);

            textPaneOrganoleptic.setText("");
            textPaneTechnical.setText("");
            spinnerSampleSize.setValue(0);
            //  dbc.closeSession();
            reload();

            JOptionPane.showMessageDialog(null, "Surowiec zatwierdzony.", "Informacja", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Uzupełnij pola", "Błąd", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonAcceptActionPerformed

    private void buttonDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeclineActionPerformed
        if (!(textPaneOrganoleptic.getText().equals(""))
                && !(textPaneTechnical.getText().equals(""))
                && !(spinnerSampleSize.getValue().equals(0))
                && ((Test) coffeeGreenList.getSelectedValue()).getLabTest().getType() != 999) {
            Test selected = (Test) coffeeGreenList.getSelectedValue();
            LabTest test;
            dbc.openSession();

            selected.setState(Global.NOT_ACCEPTED);
            dbc.updateObject(selected);
            test = selected.getLabTest();

            test.setOrganoleptic(textPaneOrganoleptic.getText());
            test.setTechnical(textPaneTechnical.getText());
            test.setSampleSize((Integer) spinnerSampleSize.getValue());
            test.setExamineDate(new Timestamp(((Date) spinnerDate.getValue()).getTime()));
            test.setLabAssistant(emp);
            test.setAccepted(Boolean.FALSE);
            dbc.updateObject(test);

            textPaneOrganoleptic.setText("");
            textPaneTechnical.setText("");
            spinnerSampleSize.setValue(0);
            reload();
            JOptionPane.showMessageDialog(null, "Surowiec odrzucony.", "Informacja", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Uzupełnij pola", "Błąd", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonDeclineActionPerformed

    private void buttonDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDetailsActionPerformed
        Details selected = (Details) coffeeGreenList.getSelectedValue();
        selected.showDetails();
    }//GEN-LAST:event_buttonDetailsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String options[] = new String[]{"Zamknij"};
        Test selected = (Test) coffeeGreenList.getSelectedValue();
        switch (jComboBox1.getSelectedIndex()) {
            case (Global.RESOURCE_TYPE_COFFEE_GREEN):
                JOptionPane.showOptionDialog(this, new DetailsLabTestGreenCoffeePanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                break;
            case (Global.RESOURCE_TYPE_AROMA):
                JOptionPane.showOptionDialog(this, new DetailsLabTestAromaPanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                break;
            case (Global.RESOURCE_TYPE_CARDBOARD):
                JOptionPane.showOptionDialog(this, new DetailsLabTestCardboardPanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                break;
            case (Global.RESOURCE_TYPE_COFFEE_INSTANT):
                JScrollPane scrollPane = new JScrollPane(new DetailsLabTestInstantPanel(selected.getLabTest(), jComboBox1.getSelectedIndex()));
                scrollPane.setPreferredSize(new Dimension(650, 550));
                JOptionPane.showOptionDialog(this, scrollPane, "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                break;
            case (Global.RESOURCE_TYPE_COFFEE_OTHER):
                JOptionPane.showOptionDialog(this, new DetailsLabTestCoffeeOtherPanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                break;
            case (Global.RESOURCE_TYPE_COFFEE_POWDER):
                JOptionPane.showOptionDialog(this, new DetailsLabTestPowderPanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                break;
            case (Global.RESOURCE_TYPE_PACKAGE):
                JOptionPane.showOptionDialog(this, new DetailsLabTestPackagePanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

                break;
            case (Global.RESOURCE_TYPE_COFFEE_PADS):
                JOptionPane.showOptionDialog(this, new DetailsLabTestCoffeePadsPanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

                break;
            case (Global.RESOURCE_TYPE_COFFEE_RETURNED):
                JOptionPane.showOptionDialog(this, new DetailsLabTestCoffeeRetrunedPanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

                break;
            case (Global.RESOURCE_TYPE_COFFEE_CAPSULE):
                JOptionPane.showOptionDialog(this, new DetailsLabTestCoffeeCapsulePanel(selected.getLabTest(), jComboBox1.getSelectedIndex()), "Uzupełnij dane badania", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

                break;
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        reload();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAccept;
    private javax.swing.JButton buttonDecline;
    private javax.swing.JButton buttonDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelVermin;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JSpinner spinnerDate;
    private javax.swing.JSpinner spinnerSampleSize;
    private javax.swing.JTextPane textPaneOrganoleptic;
    private javax.swing.JTextPane textPaneTechnical;
    // End of variables declaration//GEN-END:variables
}
