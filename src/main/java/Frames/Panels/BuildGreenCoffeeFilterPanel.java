/* 
 * Copyright 2018 Cafe Sati Polska.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package Frames.Panels;

import GreenCoffeeClasses.CoffeeAttribute;
import ProductionManagement.DataBaseConnector;
import ProductionManagement.Global;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Przemys≈Çaw
 */
public class BuildGreenCoffeeFilterPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddGreenCoffeeMagazynierPanel
     */
    DataBaseConnector dbc = null;
    public ArrayList<CoffeeAttribute> getAttributes() {
        ArrayList<CoffeeAttribute> attributes = new ArrayList<>();
        DefaultTableModel coffeeAttributesModel = (DefaultTableModel) tableCoffeeAttribute.getModel();
        for (int i = 0; i < coffeeAttributesModel.getRowCount(); i++) {
            if ((Boolean) coffeeAttributesModel.getValueAt(i, 1)) {
                attributes.add((CoffeeAttribute) coffeeAttributesModel.getValueAt(i, 0));
            }
        }
        return attributes;
    }

    public BuildGreenCoffeeFilterPanel() {
        initComponents();

        if (dbc == null) {
            dbc = Global.getDataBaseConnector();
        }
        dbc.openSession();
        DefaultTableModel coffeeAttributesModel = (DefaultTableModel) tableCoffeeAttribute.getModel();
        for (CoffeeAttribute ca : dbc.getCoffeeAttribute()) {
            Object[] o = new Object[]{(Object) ca, false};
            coffeeAttributesModel.addRow(o);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCoffeeAttribute = new javax.swing.JTable();

        tableCoffeeAttribute.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Atrybut", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCoffeeAttribute);
        if (tableCoffeeAttribute.getColumnModel().getColumnCount() > 0) {
            tableCoffeeAttribute.getColumnModel().getColumn(0).setResizable(false);
            tableCoffeeAttribute.getColumnModel().getColumn(0).setPreferredWidth(150);
            tableCoffeeAttribute.getColumnModel().getColumn(1).setMinWidth(20);
            tableCoffeeAttribute.getColumnModel().getColumn(1).setPreferredWidth(20);
            tableCoffeeAttribute.getColumnModel().getColumn(1).setMaxWidth(20);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCoffeeAttribute;
    // End of variables declaration//GEN-END:variables
}
