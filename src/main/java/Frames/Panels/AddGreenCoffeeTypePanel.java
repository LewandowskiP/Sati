/* 
 * Copyright 2018 Cafe Sati Polska.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package Frames.Panels;

import GreenCoffeeClasses.CoffeeAttribute;
import GreenCoffeeClasses.CoffeeType;
import ProductionManagement.DataBaseConnector;
import ProductionManagement.Global;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Przemysław
 */
public class AddGreenCoffeeTypePanel extends javax.swing.JPanel {

    /**
     * Creates new form AddGreenCoffeeMagazynierPanel
     */
    DataBaseConnector dbc = null;

    private void resetInput() {
        for (int i = 0; i < tableCoffeeAttribute.getModel().getRowCount(); i++) {
            tableCoffeeAttribute.getModel().setValueAt(false, i, 1);
        }
        textFieldCoffeeTypeName.setText("");

    }

    public AddGreenCoffeeTypePanel() {
        initComponents();

        if (dbc == null) {
            dbc = Global.getDataBaseConnector();
        }
        dbc.openSession();
        DefaultTableModel coffeeAttributesModel = (DefaultTableModel) tableCoffeeAttribute.getModel();
        for (CoffeeAttribute ca : dbc.getCoffeeAttribute()) {
            Object[] o = new Object[]{(Object) ca, new Boolean(false)};
            System.out.println(o);
            coffeeAttributesModel.addRow(o);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMain = new javax.swing.JLabel();
        buttonAddNewGreenCoffeeType = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCoffeeAttribute = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        textFieldCoffeeTypeName = new javax.swing.JTextField();
        buttonNewCoffeeAttribute = new javax.swing.JButton();

        labelMain.setText("Wprowadzenie typu kawy zielonej");

        buttonAddNewGreenCoffeeType.setText("Zatwierdź nowy typ kawy");
        buttonAddNewGreenCoffeeType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddNewGreenCoffeeTypeActionPerformed(evt);
            }
        });

        tableCoffeeAttribute.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Typ", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCoffeeAttribute);
        if (tableCoffeeAttribute.getColumnModel().getColumnCount() > 0) {
            tableCoffeeAttribute.getColumnModel().getColumn(0).setPreferredWidth(150);
            tableCoffeeAttribute.getColumnModel().getColumn(1).setMinWidth(20);
            tableCoffeeAttribute.getColumnModel().getColumn(1).setPreferredWidth(20);
            tableCoffeeAttribute.getColumnModel().getColumn(1).setMaxWidth(20);
        }

        jLabel2.setText("Nazwa kawy");

        buttonNewCoffeeAttribute.setText("Dodaj nowy atrybut");
        buttonNewCoffeeAttribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewCoffeeAttributeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addComponent(textFieldCoffeeTypeName)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMain)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonAddNewGreenCoffeeType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonNewCoffeeAttribute)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldCoffeeTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddNewGreenCoffeeType)
                    .addComponent(buttonNewCoffeeAttribute))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddNewGreenCoffeeTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddNewGreenCoffeeTypeActionPerformed

        CoffeeType ct = new CoffeeType();
        Set<CoffeeAttribute> sca = new HashSet<CoffeeAttribute>();

        DefaultTableModel coffeeAttributeModel = (DefaultTableModel) tableCoffeeAttribute.getModel();
        for (int i = 0; i < coffeeAttributeModel.getRowCount(); i++) {

            if ((Boolean) coffeeAttributeModel.getValueAt(i, 1) == true) {
                CoffeeAttribute ca = (CoffeeAttribute) coffeeAttributeModel.getValueAt(i, 0);
                sca.add(ca);

            }
        }
        ct.getCoffeeAttribute().addAll(sca);
        ct.setType(textFieldCoffeeTypeName.getText());
        dbc.openSession();
        dbc.saveOrUpdateObject(ct);
        
        resetInput();
        JOptionPane.showMessageDialog(null, "Dodano nowy element", "Informacja", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_buttonAddNewGreenCoffeeTypeActionPerformed

    private void buttonNewCoffeeAttributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewCoffeeAttributeActionPerformed
        String[] option = {"Cofnij"};
        int result = JOptionPane.showOptionDialog(this, new AddCoffeeAttributePanel(), "Dodaj nowy atrybut kawy", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, null, option, option[0]);
        if (JOptionPane.OK_OPTION == result) {

            DefaultTableModel coffeeAttributesModel = (DefaultTableModel) tableCoffeeAttribute.getModel();
            while (coffeeAttributesModel.getRowCount() > 0) {
                coffeeAttributesModel.removeRow(0);
            }
            dbc.clearSession();
            dbc.openSession();
            for (CoffeeAttribute ca : dbc.getCoffeeAttribute()) {
                Object[] o = new Object[]{(Object) ca, new Boolean(false)};
                System.out.println(o);
                coffeeAttributesModel.addRow(o);
            }
           
            resetInput();
        }
    }//GEN-LAST:event_buttonNewCoffeeAttributeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddNewGreenCoffeeType;
    private javax.swing.JButton buttonNewCoffeeAttribute;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelMain;
    private javax.swing.JTable tableCoffeeAttribute;
    private javax.swing.JTextField textFieldCoffeeTypeName;
    // End of variables declaration//GEN-END:variables
}
