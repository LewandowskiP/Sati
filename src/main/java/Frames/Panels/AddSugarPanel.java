/* 
 * Copyright 2018 Cafe Sati Polska.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package Frames.Panels;

import ProductionManagement.LabTest;
import ProductionManagement.DataBaseConnector;
import ProductionManagement.Employee;
import GreenCoffeeClasses.Provider;

import ProductClasses.Sugar;
import ProductClasses.SugarType;
import ProductionManagement.Global;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Przemysław
 */
public class AddSugarPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddGreenCoffeeMagazynierPanel
     */
    ArrayList<SugarType> alst;
    ArrayList<Provider> alp;
    DataBaseConnector dbc;
    Employee emp;

    public AddSugarPanel(Employee emp) {
        initComponents();
        this.emp = emp;
        if (dbc == null) {
            dbc = Global.getDataBaseConnector();
            dbc.clearSession();
        }
        dbc.openSession();
        alst = dbc.getSugarType();
        comboBoxSugarType.removeAllItems();
        for (SugarType st : alst) {
            comboBoxSugarType.addItem(st);
        }
        comboBoxSugarType.setSelectedItem(null);
        alp = dbc.getProvider();
        Object[] o = alp.toArray();
        Arrays.sort(o);

        comboBoxProvider.removeAllItems();
        for (Object ob : o) {
            comboBoxProvider.addItem(ob);
        }
        comboBoxProvider.setSelectedItem(null);

        spinnerQuantity.setEnabled(false);
        spinnerQuantity.setVisible(false);
        labelWeight.setVisible(false);
    }

    private void resetInput() {
        comboBoxProvider.setSelectedItem(null);
        comboBoxSugarType.setSelectedItem(null);
        spinnerQuantity.setValue(new Integer(0));
        checkBoxVermin.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMain = new javax.swing.JLabel();
        labelWeight = new javax.swing.JLabel();
        buttonRegisterToLaboratory = new javax.swing.JButton();
        labelCoffeOwner1 = new javax.swing.JLabel();
        comboBoxSugarType = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        comboBoxProvider = new javax.swing.JComboBox();
        checkBoxVermin = new javax.swing.JCheckBox();
        buttonNewSugarType = new javax.swing.JButton();
        buttonNewProvider = new javax.swing.JButton();
        spinnerDate = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        spinnerQuantity = new javax.swing.JSpinner();

        labelMain.setText("Rejestrowanie cukru do badania");

        labelWeight.setText("Ilość sztuk");

        buttonRegisterToLaboratory.setText("Zarejestruj do badania");
        buttonRegisterToLaboratory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegisterToLaboratoryActionPerformed(evt);
            }
        });

        labelCoffeOwner1.setText("Typ cukru");

        jLabel1.setText("Producent");

        checkBoxVermin.setText("Szkodniki obecne");

        buttonNewSugarType.setText("+");
        buttonNewSugarType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewSugarTypeActionPerformed(evt);
            }
        });

        buttonNewProvider.setText("+");
        buttonNewProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewProviderActionPerformed(evt);
            }
        });

        spinnerDate.setModel(new javax.swing.SpinnerDateModel());

        jLabel2.setText("Data Przydatności");

        jButton1.setText("Wyczyść");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCoffeOwner1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(labelWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboBoxProvider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonNewProvider))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboBoxSugarType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonNewSugarType))
                                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(checkBoxVermin)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonRegisterToLaboratory)
                                .addGap(28, 28, 28)
                                .addComponent(jButton1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spinnerDate, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(labelMain))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCoffeOwner1)
                    .addComponent(comboBoxSugarType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNewSugarType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxProvider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNewProvider))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeight)
                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addComponent(spinnerDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxVermin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRegisterToLaboratory)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRegisterToLaboratoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegisterToLaboratoryActionPerformed
        // TODO add your handling code here:
        dbc.openSession();
        try {
            Timestamp currentTime = new Timestamp(System.currentTimeMillis());
            String str = dbc.getMaxLabIdSugar();
            String newLabIdStr;
            if (str != null) {
                Integer lastLabId = Integer.parseInt(str.substring(1, 7));

                newLabIdStr = String.format("C%06d", lastLabId + 1);
            } else {
                newLabIdStr = String.format("C%06d", 1);
            }
            Sugar s = new Sugar();
            Timestamp expiryDate = new Timestamp(((Date) spinnerDate.getValue()).getTime());
            s.setExpiryDate(expiryDate);
            s.setQuantity((Integer) spinnerQuantity.getValue());
            s.setArrivalQuantity((Integer) spinnerQuantity.getValue());
            s.setState(Global.TO_EXAMINE);
            s.setArrivalDate(currentTime);
            s.setQuantity(s.getQuantity());
            s.setStoreman(emp);
            s.setProvider((Provider) comboBoxProvider.getSelectedItem());
            s.setSugarType((SugarType) comboBoxSugarType.getSelectedItem());
            s.setLabId(newLabIdStr);
            LabTest lt = new LabTest();
            lt.setVermin(checkBoxVermin.isSelected());
            dbc.saveObject(lt);
            s.setLabTest(lt);
            dbc.saveObject(s);
            JOptionPane.showMessageDialog(null, "Zarejestrowano do badania", "Informacja", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sprawdź wprowadzone dane", "Błąd", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
    }//GEN-LAST:event_buttonRegisterToLaboratoryActionPerformed

    private void buttonNewSugarTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewSugarTypeActionPerformed
        String[] option = {"Cofnij"};
        int result = JOptionPane.showOptionDialog(this, new AddSugarTypePanel(), "Dodaj nowy typ cukru", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, null, option, option[0]);
        if (JOptionPane.OK_OPTION == result) {
            dbc.clearSession();
            dbc.openSession();
            alst = dbc.getSugarType();
            comboBoxSugarType.removeAllItems();
            for (SugarType st : alst) {
                comboBoxSugarType.addItem(st);
            }
            comboBoxSugarType.setSelectedItem(null);
        }
    }//GEN-LAST:event_buttonNewSugarTypeActionPerformed

    private void buttonNewProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewProviderActionPerformed
        String[] option = {"Cofnij"};
        int result = JOptionPane.showOptionDialog(this, new AddProviderPanel(), "Dodaj nowego dostawcę", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, null, option, option[0]);
        if (JOptionPane.OK_OPTION == result) {
            dbc.clearSession();
            dbc.openSession();
            alp = dbc.getProvider();
            Object[] o = alp.toArray();
            Arrays.sort(o);

            comboBoxProvider.removeAllItems();
            for (Object ob : o) {
                comboBoxProvider.addItem(ob);
            }
            comboBoxProvider.setSelectedItem(null);

        }
    }//GEN-LAST:event_buttonNewProviderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        resetInput();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonNewProvider;
    private javax.swing.JButton buttonNewSugarType;
    private javax.swing.JButton buttonRegisterToLaboratory;
    private javax.swing.JCheckBox checkBoxVermin;
    private javax.swing.JComboBox comboBoxProvider;
    private javax.swing.JComboBox comboBoxSugarType;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelCoffeOwner1;
    private javax.swing.JLabel labelMain;
    private javax.swing.JLabel labelWeight;
    private javax.swing.JSpinner spinnerDate;
    private javax.swing.JSpinner spinnerQuantity;
    // End of variables declaration//GEN-END:variables
}
