/* 
 * Copyright 2018 Cafe Sati Polska.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package Frames.Panels;

import GreenCoffeeClasses.CoffeeAttribute;
import GreenCoffeeClasses.CoffeeGreen;
import GreenCoffeeClasses.CoffeeType;
import ProductClasses.Aroma;
import ProductClasses.AromaType;
import ProductClasses.DirectPackage;
import ProductClasses.DirectPackageType;
import ProductionManagement.DataBaseConnector;
import ProductionManagement.Global;
import SatiInterfaces.Details;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Przemysław
 */
public class BrowseAllResourcesByTypePanel extends javax.swing.JPanel {

    /**
     * Creates new form BrowseAllAromas
     */
    void loadTypes() {
        comboBoxResourceTypes.removeAllItems();
        if (comboBoxType.getSelectedIndex() == COFFEE) {
            ArrayList<CoffeeType> alct = dbc.getCoffeeType();
            Collections.sort(alct);
            for (CoffeeType ct : alct) {
                comboBoxResourceTypes.addItem(ct);
            }
        } else if (comboBoxType.getSelectedIndex() == AROMA) {
            ArrayList<AromaType> alat = dbc.getAromaType();
            Collections.sort(alat);
            for (AromaType at : alat) {
                comboBoxResourceTypes.addItem(at);
            }
        } else {
            ArrayList<DirectPackageType> aldpt = dbc.getDirectPackageType();
            Collections.sort(aldpt);
            for (DirectPackageType dpt : aldpt) {
                comboBoxResourceTypes.addItem(dpt);
            }
        }
    }
    DataBaseConnector dbc;
    Object selectedObject;
    private final int COFFEE = 0;
    private final int AROMA = 1;
    private final int DIRECT_PACKAGE = 2;

    public BrowseAllResourcesByTypePanel() {
        initComponents();
        if (dbc == null) {
            dbc = Global.getDataBaseConnector();
            dbc.clearSession();

        }
        dbc.openSession();

        comboBoxType.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent arg0) {
                loadTypes();
            }

        });

        comboBoxType.setSelectedItem(null);
        comboBoxResourceTypes.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent arg0) {
                reload();
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listRaports = new javax.swing.JList();
        buttonDetails = new javax.swing.JButton();
        comboBoxType = new javax.swing.JComboBox();
        comboBoxResourceTypes = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setText("Wybierz typ surowca");

        listRaports.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listRaports.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(listRaports);

        buttonDetails.setText("Pokaż szczegóły wybranej pozycji");
        buttonDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDetailsActionPerformed(evt);
            }
        });

        comboBoxType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kawy", "Aromaty", "Opakowania" }));

        jButton2.setText("Filtr");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxResourceTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                        .addComponent(buttonDetails)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxResourceTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(buttonDetails))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void reload() {
        DefaultListModel dlm = new DefaultListModel();
        if (comboBoxType.getSelectedIndex() == COFFEE) {
            ArrayList<CoffeeGreen> alcg = dbc.getCoffeeGreenWithCoffeeTypeNoState((CoffeeType) comboBoxResourceTypes.getSelectedItem());
            for (CoffeeGreen cg : alcg) {
                dlm.addElement(cg);
            }
        } else if (comboBoxType.getSelectedIndex() == AROMA) {
            ArrayList<Aroma> ala = dbc.getAromaWithAromaTypeNoState((AromaType) comboBoxResourceTypes.getSelectedItem());

            for (Aroma a : ala) {
                dlm.addElement(a);
            }
        } else {
            ArrayList<DirectPackage> aldpt = dbc.getDirectPackageWithDirectPackageTypeNoState((DirectPackageType) comboBoxResourceTypes.getSelectedItem());
            for (DirectPackage dp : aldpt) {
                dlm.addElement(dp);
            }
        }
        listRaports = new JList(dlm);
        listRaports.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        listRaports.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                selectedObject = listRaports.getSelectedValue();

            }
        });
        jScrollPane1.setViewportView(listRaports);
    }

    private void buttonDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDetailsActionPerformed
        Details det = (Details) selectedObject;
        det.showDetails();
    }//GEN-LAST:event_buttonDetailsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        BuildGreenCoffeeFilterPanel bgcfp = new BuildGreenCoffeeFilterPanel();
        String[] option = {"OK"};
        int result = JOptionPane.showOptionDialog(this, bgcfp, "Wbierz atrybuty", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, null, option, option[0]);
        if (result == JOptionPane.OK_OPTION) {
            ArrayList<CoffeeAttribute> attributes = bgcfp.getAttributes();
            ComboBoxModel t = (ComboBoxModel) comboBoxResourceTypes.getModel();
            DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
            for (int i = 0; i < t.getSize(); i++) {
                dcbm.addElement(t.getElementAt(i));
                for (CoffeeAttribute ca : attributes) {
                    if (t.getElementAt(i).toString().contains(ca.getShortcut())) {
                    } else {
                        dcbm.removeElement(t.getElementAt(i));
                        break;
                    }
                }
            }
            comboBoxResourceTypes.setModel(dcbm);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        loadTypes();
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDetails;
    private javax.swing.JComboBox comboBoxResourceTypes;
    private javax.swing.JComboBox comboBoxType;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listRaports;
    // End of variables declaration//GEN-END:variables
}
